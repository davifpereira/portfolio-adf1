{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-consultoria-bi"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_dimensao_produto_primeira')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Primeira Carga"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_data_lake_bd_dim_produto",
								"type": "DatasetReference"
							},
							"name": "CSVdimProduto",
							"description": "Import data from ds_data_lake_bd_dim_produto"
						},
						{
							"dataset": {
								"referenceName": "ds_data_lake_bd_enderecos",
								"type": "DatasetReference"
							},
							"name": "CSVenderecos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_dim_produto",
								"type": "DatasetReference"
							},
							"name": "InsereBD"
						}
					],
					"transformations": [
						{
							"name": "LeftJoinEnderecos"
						},
						{
							"name": "SelecionaColunas"
						},
						{
							"name": "ClassifcaSKU"
						},
						{
							"name": "DTinicioNula"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SKU as string,",
						"          PRODUTO as string,",
						"          DT_DESATIVACAO as string,",
						"          CATEGORIA as string,",
						"          ARMAZEM as string,",
						"          COD_CIDADE as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> CSVdimProduto",
						"source(output(",
						"          COD_CIDADE as integer,",
						"          CIDADE as string,",
						"          ESTADO as string,",
						"          PAIS as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> CSVenderecos",
						"CSVdimProduto, CSVenderecos join(CSVdimProduto@COD_CIDADE == CSVenderecos@COD_CIDADE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LeftJoinEnderecos",
						"LeftJoinEnderecos select(mapColumn(",
						"          SKU,",
						"          PRODUTO,",
						"          CATEGORIA,",
						"          ARMAZEM,",
						"          CIDADE_ARMAZENAGEM = CIDADE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionaColunas",
						"DTinicioNula sort(asc(toInteger(substring(SKU, 5, 9)), false)) ~> ClassifcaSKU",
						"SelecionaColunas derive(DT_INICIO = '') ~> DTinicioNula",
						"ClassifcaSKU sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SK_PRODUTO as integer,",
						"          SKU as string,",
						"          PRODUTO as string,",
						"          CATEGORIA as string,",
						"          ARMAZEM as string,",
						"          CIDADE_ARMAZEM as string,",
						"          ATIVO as string,",
						"          DT_INICIO as date,",
						"          DT_FIM as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          SKU,",
						"          PRODUTO,",
						"          CATEGORIA,",
						"          ARMAZEM,",
						"          CIDADE_ARMAZEM = CIDADE_ARMAZENAGEM,",
						"          DT_INICIO",
						"     )) ~> InsereBD"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dimensao_vendedor')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_data_lake_bd_dim_vendedor",
								"type": "DatasetReference"
							},
							"name": "CSVdimVendedor"
						},
						{
							"dataset": {
								"referenceName": "ds_data_lake_bd_enderecos",
								"type": "DatasetReference"
							},
							"name": "CSVenderecos"
						},
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_dim_vendedor",
								"type": "DatasetReference"
							},
							"name": "DBdimVendedor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_dim_vendedor",
								"type": "DatasetReference"
							},
							"name": "InsereBD2"
						},
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_dim_vendedor",
								"type": "DatasetReference"
							},
							"name": "AlteraBD"
						},
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_dim_vendedor",
								"type": "DatasetReference"
							},
							"name": "InsereBD1"
						}
					],
					"transformations": [
						{
							"name": "DadosAlterados"
						},
						{
							"name": "ColunaDtFim"
						},
						{
							"name": "Condicao"
						},
						{
							"name": "LeftJoinEnderecos"
						},
						{
							"name": "DadosAtualizados"
						},
						{
							"name": "SelecionaColunas"
						},
						{
							"name": "DadosNovos"
						}
					],
					"scriptLines": [
						"source(output(",
						"          COD_VENDEDOR as integer,",
						"          NOME_COMPLETO as string,",
						"          CARGO as string,",
						"          REGIAO_VENDA as string,",
						"          CIDADE_ATUACAO as integer,",
						"          COD_SUP_1 as integer,",
						"          NOME_COMP_1 as string,",
						"          COD_SUP_2 as integer,",
						"          NOME_COMP_2 as string,",
						"          COD_SUP_3 as integer,",
						"          NOME_COMP_3 as string,",
						"          COD_SUP_4 as integer,",
						"          NOME_COMP_4 as string,",
						"          COD_SUP_5 as integer,",
						"          NOME_COMP_5 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> CSVdimVendedor",
						"source(output(",
						"          COD_CIDADE as integer,",
						"          CIDADE as string,",
						"          ESTADO as string,",
						"          PAIS as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> CSVenderecos",
						"source(output(",
						"          SK_VENDEDOR as integer,",
						"          COD_VENDEDOR as integer,",
						"          NOME_COMPLETO as string,",
						"          CARGO as string,",
						"          REGIAO_VENDA as string,",
						"          CIDADE_ATUACAO as string,",
						"          COD_SUP_1 as integer,",
						"          NOME_COMP_1 as string,",
						"          COD_SUP_2 as integer,",
						"          NOME_COMP_2 as string,",
						"          COD_SUP_3 as integer,",
						"          NOME_COMP_3 as string,",
						"          COD_SUP_4 as integer,",
						"          NOME_COMP_4 as string,",
						"          COD_SUP_5 as integer,",
						"          NOME_COMP_5 as string,",
						"          ATIVO as string,",
						"          DT_FIM as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    [SK_VENDEDOR]\\n    ,[COD_VENDEDOR]\\n    ,[NOME_COMPLETO]\\n    ,[CARGO]\\n    ,[REGIAO_VENDA]\\n    ,[CIDADE_ATUACAO]\\n    ,[COD_SUP_1]\\n    ,[NOME_COMP_1]\\n    ,[COD_SUP_2]\\n    ,[NOME_COMP_2]\\n    ,[COD_SUP_3]\\n    ,[NOME_COMP_3]\\n    ,[COD_SUP_4]\\n    ,[NOME_COMP_4]\\n    ,[COD_SUP_5]\\n    ,[NOME_COMP_5]\\n    ,[ATIVO]\\n    ,[DT_FIM]\\nFROM [comercial].[dimensao_vendedor]\\nWHERE\\n     [ATIVO] = \\'S\\'',",
						"     format: 'query') ~> DBdimVendedor",
						"DBdimVendedor, SelecionaColunas exists(DBdimVendedor@COD_VENDEDOR == SelecionaColunas@COD_VENDEDOR && (\r",
						"     DBdimVendedor@CARGO != SelecionaColunas@CARGO || \r",
						"     DBdimVendedor@REGIAO_VENDA != SelecionaColunas@REGIAO_VENDA || \r",
						"     DBdimVendedor@CIDADE_ATUACAO != SelecionaColunas@CIDADE_ATUACAO ||\r",
						"     DBdimVendedor@COD_SUP_1 != SelecionaColunas@COD_SUP_1 || \r",
						"     DBdimVendedor@COD_SUP_2 != SelecionaColunas@COD_SUP_2 || \r",
						"     DBdimVendedor@COD_SUP_3 != SelecionaColunas@COD_SUP_3 || \r",
						"     DBdimVendedor@COD_SUP_4 != SelecionaColunas@COD_SUP_4 || \r",
						"     DBdimVendedor@COD_SUP_5 != SelecionaColunas@COD_SUP_5\r",
						"),",
						"     negate:false,",
						"     broadcast: 'auto')~> DadosAlterados",
						"DadosAlterados derive(DT_FIM = addDays(currentDate('GMT-3'), -1),",
						"          ATIVO = 'N') ~> ColunaDtFim",
						"ColunaDtFim alterRow(updateIf(1==1)) ~> Condicao",
						"CSVdimVendedor, CSVenderecos join(CIDADE_ATUACAO == COD_CIDADE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LeftJoinEnderecos",
						"SelecionaColunas, DBdimVendedor exists(DBdimVendedor@COD_VENDEDOR == SelecionaColunas@COD_VENDEDOR && (",
						"     DBdimVendedor@CARGO != SelecionaColunas@CARGO || ",
						"     DBdimVendedor@REGIAO_VENDA != SelecionaColunas@REGIAO_VENDA || ",
						"     DBdimVendedor@CIDADE_ATUACAO != SelecionaColunas@CIDADE_ATUACAO ||",
						"     DBdimVendedor@COD_SUP_1 != SelecionaColunas@COD_SUP_1 || ",
						"     DBdimVendedor@COD_SUP_2 != SelecionaColunas@COD_SUP_2 || ",
						"     DBdimVendedor@COD_SUP_3 != SelecionaColunas@COD_SUP_3 || ",
						"     DBdimVendedor@COD_SUP_4 != SelecionaColunas@COD_SUP_4 || ",
						"     DBdimVendedor@COD_SUP_5 != SelecionaColunas@COD_SUP_5",
						"),",
						"     negate:false,",
						"     broadcast: 'auto')~> DadosAtualizados",
						"LeftJoinEnderecos select(mapColumn(",
						"          COD_VENDEDOR,",
						"          NOME_COMPLETO,",
						"          CARGO,",
						"          REGIAO_VENDA,",
						"          CIDADE_ATUACAO = CIDADE,",
						"          COD_SUP_1,",
						"          NOME_COMP_1,",
						"          COD_SUP_2,",
						"          NOME_COMP_2,",
						"          COD_SUP_3,",
						"          NOME_COMP_3,",
						"          COD_SUP_4,",
						"          NOME_COMP_4,",
						"          COD_SUP_5,",
						"          NOME_COMP_5",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> SelecionaColunas",
						"SelecionaColunas, DBdimVendedor exists(SelecionaColunas@COD_VENDEDOR == DBdimVendedor@COD_VENDEDOR,",
						"     negate:true,",
						"     broadcast: 'auto')~> DadosNovos",
						"DadosAtualizados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SK_VENDEDOR as integer,",
						"          COD_VENDEDOR as integer,",
						"          NOME_COMPLETO as string,",
						"          CARGO as string,",
						"          REGIAO_VENDA as string,",
						"          CIDADE_ATUACAO as string,",
						"          COD_SUP_1 as integer,",
						"          NOME_COMP_1 as string,",
						"          COD_SUP_2 as integer,",
						"          NOME_COMP_2 as string,",
						"          COD_SUP_3 as integer,",
						"          NOME_COMP_3 as string,",
						"          COD_SUP_4 as integer,",
						"          NOME_COMP_4 as string,",
						"          COD_SUP_5 as integer,",
						"          NOME_COMP_5 as string,",
						"          ATIVO as string,",
						"          DT_INICIO as date,",
						"          DT_FIM as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          COD_VENDEDOR,",
						"          NOME_COMPLETO,",
						"          CARGO,",
						"          REGIAO_VENDA,",
						"          CIDADE_ATUACAO,",
						"          COD_SUP_1,",
						"          NOME_COMP_1,",
						"          COD_SUP_2,",
						"          NOME_COMP_2,",
						"          COD_SUP_3,",
						"          NOME_COMP_3,",
						"          COD_SUP_4,",
						"          NOME_COMP_4,",
						"          COD_SUP_5,",
						"          NOME_COMP_5",
						"     )) ~> InsereBD2",
						"Condicao sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SK_VENDEDOR as integer,",
						"          COD_VENDEDOR as integer,",
						"          NOME_COMPLETO as string,",
						"          CARGO as string,",
						"          REGIAO_VENDA as string,",
						"          CIDADE_ATUACAO as string,",
						"          COD_SUP_1 as integer,",
						"          NOME_COMP_1 as string,",
						"          COD_SUP_2 as integer,",
						"          NOME_COMP_2 as string,",
						"          COD_SUP_3 as integer,",
						"          NOME_COMP_3 as string,",
						"          COD_SUP_4 as integer,",
						"          NOME_COMP_4 as string,",
						"          COD_SUP_5 as integer,",
						"          NOME_COMP_5 as string,",
						"          ATIVO as string,",
						"          DT_INICIO as date,",
						"          DT_FIM as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['SK_VENDEDOR'],",
						"     format: 'table',",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 3,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          SK_VENDEDOR,",
						"          ATIVO,",
						"          DT_FIM",
						"     )) ~> AlteraBD",
						"DadosNovos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SK_VENDEDOR as integer,",
						"          COD_VENDEDOR as integer,",
						"          NOME_COMPLETO as string,",
						"          CARGO as string,",
						"          REGIAO_VENDA as string,",
						"          CIDADE_ATUACAO as string,",
						"          COD_SUP_1 as integer,",
						"          NOME_COMP_1 as string,",
						"          COD_SUP_2 as integer,",
						"          NOME_COMP_2 as string,",
						"          COD_SUP_3 as integer,",
						"          NOME_COMP_3 as string,",
						"          COD_SUP_4 as integer,",
						"          NOME_COMP_4 as string,",
						"          COD_SUP_5 as integer,",
						"          NOME_COMP_5 as string,",
						"          ATIVO as string,",
						"          DT_INICIO as date,",
						"          DT_FIM as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          COD_VENDEDOR,",
						"          NOME_COMPLETO,",
						"          CARGO,",
						"          REGIAO_VENDA,",
						"          CIDADE_ATUACAO,",
						"          COD_SUP_1,",
						"          NOME_COMP_1,",
						"          COD_SUP_2,",
						"          NOME_COMP_2,",
						"          COD_SUP_3,",
						"          NOME_COMP_3,",
						"          COD_SUP_4,",
						"          NOME_COMP_4,",
						"          COD_SUP_5,",
						"          NOME_COMP_5",
						"     )) ~> InsereBD1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dimensao_vendedor_primeira')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Primeira Carga"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_data_lake_bd_dim_vendedor",
								"type": "DatasetReference"
							},
							"name": "CSVdimVendedor"
						},
						{
							"dataset": {
								"referenceName": "ds_data_lake_bd_enderecos",
								"type": "DatasetReference"
							},
							"name": "CSVenderecos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_dim_vendedor",
								"type": "DatasetReference"
							},
							"name": "InsereBD"
						}
					],
					"transformations": [
						{
							"name": "LeftJoinEnderecos"
						},
						{
							"name": "SelecionaColunas"
						},
						{
							"name": "DTinicioNula"
						},
						{
							"name": "ClassificaVendedor"
						}
					],
					"scriptLines": [
						"source(output(",
						"          COD_VENDEDOR as integer,",
						"          NOME_COMPLETO as string,",
						"          CARGO as string,",
						"          REGIAO_VENDA as string,",
						"          CIDADE_ATUACAO as integer,",
						"          COD_SUP_1 as integer,",
						"          NOME_COMP_1 as string,",
						"          COD_SUP_2 as integer,",
						"          NOME_COMP_2 as string,",
						"          COD_SUP_3 as integer,",
						"          NOME_COMP_3 as string,",
						"          COD_SUP_4 as integer,",
						"          NOME_COMP_4 as string,",
						"          COD_SUP_5 as integer,",
						"          NOME_COMP_5 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> CSVdimVendedor",
						"source(output(",
						"          COD_CIDADE as integer,",
						"          CIDADE as string,",
						"          ESTADO as string,",
						"          PAIS as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> CSVenderecos",
						"CSVdimVendedor, CSVenderecos join(CIDADE_ATUACAO == COD_CIDADE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LeftJoinEnderecos",
						"LeftJoinEnderecos select(mapColumn(",
						"          COD_VENDEDOR,",
						"          NOME_COMPLETO,",
						"          CARGO,",
						"          REGIAO_VENDA,",
						"          CIDADE_ATUACAO = CIDADE,",
						"          COD_SUP_1,",
						"          NOME_COMP_1,",
						"          COD_SUP_2,",
						"          NOME_COMP_2,",
						"          COD_SUP_3,",
						"          NOME_COMP_3,",
						"          COD_SUP_4,",
						"          NOME_COMP_4,",
						"          COD_SUP_5,",
						"          NOME_COMP_5",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> SelecionaColunas",
						"SelecionaColunas derive(DT_INICIO = '') ~> DTinicioNula",
						"DTinicioNula sort(asc(COD_VENDEDOR, true)) ~> ClassificaVendedor",
						"ClassificaVendedor sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SK_VENDEDOR as integer,",
						"          COD_VENDEDOR as integer,",
						"          NOME_COMPLETO as string,",
						"          CARGO as string,",
						"          REGIAO_VENDA as string,",
						"          CIDADE_ATUACAO as string,",
						"          COD_SUP_1 as integer,",
						"          NOME_COMP_1 as string,",
						"          COD_SUP_2 as integer,",
						"          NOME_COMP_2 as string,",
						"          COD_SUP_3 as integer,",
						"          NOME_COMP_3 as string,",
						"          COD_SUP_4 as integer,",
						"          NOME_COMP_4 as string,",
						"          COD_SUP_5 as integer,",
						"          NOME_COMP_5 as string,",
						"          ATIVO as string,",
						"          DT_INICIO as date,",
						"          DT_FIM as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          COD_VENDEDOR,",
						"          NOME_COMPLETO,",
						"          CARGO,",
						"          REGIAO_VENDA,",
						"          CIDADE_ATUACAO,",
						"          COD_SUP_1,",
						"          NOME_COMP_1,",
						"          COD_SUP_2,",
						"          NOME_COMP_2,",
						"          COD_SUP_3,",
						"          NOME_COMP_3,",
						"          COD_SUP_4,",
						"          NOME_COMP_4,",
						"          COD_SUP_5,",
						"          NOME_COMP_5,",
						"          DT_INICIO",
						"     )) ~> InsereBD"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_fato_faturamento')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_data_lake_bd_fato_faturamento",
								"type": "DatasetReference"
							},
							"name": "CSVfatoFaturamento"
						},
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_dim_cliente",
								"type": "DatasetReference"
							},
							"name": "DBdimCliente"
						},
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_dim_produto",
								"type": "DatasetReference"
							},
							"name": "DBdimProduto"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_azure_sql_db_fato_faturamento",
								"type": "DatasetReference"
							},
							"name": "InsereBD"
						}
					],
					"transformations": [
						{
							"name": "JoinClienteSCD"
						},
						{
							"name": "SelecionaColunas1"
						},
						{
							"name": "JoinProdutoSCD"
						},
						{
							"name": "SelecionaColunas2"
						},
						{
							"name": "ClassificaDatas"
						}
					],
					"scriptLines": [
						"parameters{",
						"     data_inicio_se_null as date (toDate('1900-1-1','yyyy-MM-dd')),",
						"     data_fim_se_null as date (currentDate('GMT-3'))",
						"}",
						"source(output(",
						"          NOTA_FISCAL as string,",
						"          DATA_EMISSAO as date,",
						"          COD_EVENTO as string,",
						"          PEDIDO_VENDA as string,",
						"          COD_CLIENTE as integer,",
						"          SKU_PRODUTO as string,",
						"          UNID as string,",
						"          QUANTIDADE as float,",
						"          PRECO_UNITARIO as float,",
						"          COND_FRETE as string,",
						"          CUSTO_FRETE_UNIT as float,",
						"          NF_ORIGEM_DEV as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> CSVfatoFaturamento",
						"source(output(",
						"          SK_CLIENTE as integer,",
						"          COD_CLIENTE as integer,",
						"          DT_INICIO as date,",
						"          DT_FIM as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    [SK_CLIENTE]\\n    ,[COD_CLIENTE]\\n    ,[DT_INICIO]\\n    ,[DT_FIM]\\nFROM [comercial].[dimensao_cliente]',",
						"     format: 'query') ~> DBdimCliente",
						"source(output(",
						"          SK_PRODUTO as integer,",
						"          SKU as string,",
						"          DT_INICIO as date,",
						"          DT_FIM as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\n    [SK_PRODUTO]\\n    ,[SKU]\\n    ,[DT_INICIO]\\n    ,[DT_FIM]\\nFROM [comercial].[dimensao_produto]',",
						"     format: 'query') ~> DBdimProduto",
						"CSVfatoFaturamento, DBdimCliente join(CSVfatoFaturamento@COD_CLIENTE == DBdimCliente@COD_CLIENTE",
						"     && DATA_EMISSAO >= iifNull(DT_INICIO, $data_inicio_se_null)",
						"     && DATA_EMISSAO <= iifNull(DT_FIM, $data_fim_se_null),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'both')~> JoinClienteSCD",
						"JoinClienteSCD select(mapColumn(",
						"          NOTA_FISCAL,",
						"          DATA_EMISSAO,",
						"          COD_EVENTO,",
						"          PEDIDO_VENDA,",
						"          SK_CLIENTE,",
						"          SKU_PRODUTO,",
						"          UNID,",
						"          QUANTIDADE,",
						"          PRECO_UNITARIO,",
						"          COND_FRETE,",
						"          CUSTO_FRETE_UNIT,",
						"          NF_ORIGEM_DEV",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionaColunas1",
						"SelecionaColunas1, DBdimProduto join(SKU_PRODUTO == SKU",
						"     && DATA_EMISSAO >= iifNull(DT_INICIO, $data_inicio_se_null)",
						"     && DATA_EMISSAO <= iifNull(DT_FIM, $data_fim_se_null),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'both')~> JoinProdutoSCD",
						"JoinProdutoSCD select(mapColumn(",
						"          NOTA_FISCAL,",
						"          DATA_EMISSAO,",
						"          COD_EVENTO,",
						"          PEDIDO_VENDA,",
						"          SK_CLIENTE,",
						"          SK_PRODUTO,",
						"          UNID,",
						"          QUANTIDADE,",
						"          PRECO_UNITARIO,",
						"          COND_FRETE,",
						"          CUSTO_FRETE_UNIT,",
						"          NF_ORIGEM_DEV",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionaColunas2",
						"SelecionaColunas2 sort(asc(DATA_EMISSAO, true)) ~> ClassificaDatas",
						"ClassificaDatas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          NOTA_FISCAL as string,",
						"          DATA_EMISSAO as date,",
						"          COD_EVENTO as string,",
						"          PEDIDO_VENDA as string,",
						"          SK_CLIENTE as integer,",
						"          SK_PRODUTO as integer,",
						"          UNID as string,",
						"          QUANTIDADE as decimal(16,8),",
						"          PRECO_UNITARIO as decimal(16,4),",
						"          COND_FRETE as string,",
						"          CUSTO_FRETE_UNIT as decimal(16,4),",
						"          NF_ORIGEM_DEV as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     preSQLs:['DELETE FROM [faturamento].[fato_faturamento]\\nWHERE [DATA_EMISSAO] >= dbo.f_dt_carga_incremental(-60);'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          NOTA_FISCAL,",
						"          DATA_EMISSAO,",
						"          COD_EVENTO,",
						"          PEDIDO_VENDA,",
						"          SK_CLIENTE,",
						"          SK_PRODUTO,",
						"          UNID,",
						"          QUANTIDADE,",
						"          PRECO_UNITARIO,",
						"          COND_FRETE,",
						"          CUSTO_FRETE_UNIT,",
						"          NF_ORIGEM_DEV",
						"     )) ~> InsereBD"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dimensao_cliente_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert_update_dw",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dimensao_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVdimClientes": {},
									"CSVenderecos": {},
									"DBdimCliente": {},
									"CSVriscoCredito": {},
									"CSVlatitudeLongitude": {},
									"InsereBD2": {},
									"AlteraBD1": {},
									"InsereBD1": {},
									"AlteraBD2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Tarefas/Azure SQL Server"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dimensao_cliente_sql_primeira')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "primeira_carga_dw",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dimensao_clientes_primeira",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVdimClientes": {},
									"CSVenderecos": {},
									"CSVriscoCredito": {},
									"CSVlatitudeLongitude": {},
									"InsereBD": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Tarefas/Azure SQL Server/Primeira Carga"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dimensao_produto_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert_update_dw",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dimensao_produto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVdimProduto": {},
									"CSVenderecos": {},
									"DBdimProduto": {},
									"InsereBD2": {},
									"AlteraBD": {},
									"InsereBD1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Tarefas/Azure SQL Server"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dimensao_produto_sql_primeira')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert_primeira_vez",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dimensao_produto_primeira",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVdimProduto": {},
									"CSVenderecos": {},
									"InsereBD": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Tarefas/Azure SQL Server/Primeira Carga"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dimensao_produto_primeira')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dimensao_vendedor_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert_update_dw",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dimensao_vendedor",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVdimVendedor": {},
									"CSVenderecos": {},
									"DBdimVendedor": {},
									"InsereBD2": {},
									"AlteraBD": {},
									"InsereBD1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Tarefas/Azure SQL Server"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dimensao_vendedor')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dimensao_vendedor_sql_primeira')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert_primeira_vez",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dimensao_vendedor_primeira",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVdimVendedor": {},
									"CSVenderecos": {},
									"InsereBD": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Tarefas/Azure SQL Server/Primeira Carga"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dimensao_vendedor_primeira')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_fato_faturamento')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert_update_dw",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_fato_faturamento",
								"type": "DataFlowReference",
								"parameters": {
									"data_inicio_se_null": "toDate('1900-1-1','yyyy-MM-dd')",
									"data_fim_se_null": "currentDate('GMT-3')"
								},
								"datasetParameters": {
									"CSVfatoFaturamento": {},
									"DBdimCliente": {},
									"DBdimProduto": {},
									"InsereBD": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Tarefas/Azure SQL Server"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_fato_faturamento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/execucao_diaria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_arqs_csv_excel_dl",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_arqs_csv_excel_dl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_v_dimensao_cliente_dl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_arqs_csv_excel_dl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_v_dimensao_cliente_dl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_v_dimensao_produto_dl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_v_dimensao_cliente_dl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_v_dimensao_produto_dl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_v_dimensao_vendedor_dl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_v_dimensao_produto_dl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_v_dimensao_vendedor_dl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_v_fato_faturamento_dl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_v_dimensao_vendedor_dl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_v_fato_faturamento_dl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_v_interm_enderecos_dl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_v_fato_faturamento_dl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_v_interm_enderecos_dl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_dimensao_evento_sql",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_v_interm_enderecos_dl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dimensao_evento_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_cotacao_moeda_api_sql",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_dimensao_evento_sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_cotacao_moeda_api_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_dimensao_cliente_sql",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_cotacao_moeda_api_sql",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dimensao_cliente_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_dimensao_produto_sql",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_dimensao_cliente_sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dimensao_produto_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_dimensao_vendedor_sql",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_dimensao_produto_sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_dimensao_vendedor_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_fato_faturamento",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_dimensao_vendedor_sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_fato_faturamento",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_exclui_arqs_tabelas-bd_dl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_fato_faturamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_exclui_arqs_tabelas-bd_dl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_exclui_arquivos-csv_dl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_exclui_arqs_tabelas-bd_dl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_exclui_arquivos-csv_dl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exceução"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_dimensao_cliente_sql')]",
				"[concat(variables('factoryId'), '/pipelines/pl_dimensao_produto_sql')]",
				"[concat(variables('factoryId'), '/pipelines/pl_dimensao_vendedor_sql')]",
				"[concat(variables('factoryId'), '/pipelines/pl_fato_faturamento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_schedule_padrao')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "execucao_diaria",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-03-11T05:00:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/execucao_diaria')]"
			]
		}
	]
}