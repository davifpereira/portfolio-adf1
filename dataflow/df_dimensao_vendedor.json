{
	"name": "df_dimensao_vendedor",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_data_lake_bd_dim_vendedor",
						"type": "DatasetReference"
					},
					"name": "CSVdimVendedor"
				},
				{
					"dataset": {
						"referenceName": "ds_data_lake_bd_enderecos",
						"type": "DatasetReference"
					},
					"name": "CSVenderecos"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_sql_db_dim_vendedor",
						"type": "DatasetReference"
					},
					"name": "DBdimVendedor"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_azure_sql_db_dim_vendedor",
						"type": "DatasetReference"
					},
					"name": "InsereBD2"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_sql_db_dim_vendedor",
						"type": "DatasetReference"
					},
					"name": "AlteraBD"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_sql_db_dim_vendedor",
						"type": "DatasetReference"
					},
					"name": "InsereBD1"
				}
			],
			"transformations": [
				{
					"name": "DadosAlterados"
				},
				{
					"name": "ColunaDtFim"
				},
				{
					"name": "Condicao"
				},
				{
					"name": "LeftJoinEnderecos"
				},
				{
					"name": "DadosAtualizados"
				},
				{
					"name": "SelecionaColunas"
				},
				{
					"name": "DadosNovos"
				}
			],
			"scriptLines": [
				"source(output(",
				"          COD_VENDEDOR as integer,",
				"          NOME_COMPLETO as string,",
				"          CARGO as string,",
				"          REGIAO_VENDA as string,",
				"          CIDADE_ATUACAO as integer,",
				"          COD_SUP_1 as integer,",
				"          NOME_COMP_1 as string,",
				"          COD_SUP_2 as integer,",
				"          NOME_COMP_2 as string,",
				"          COD_SUP_3 as integer,",
				"          NOME_COMP_3 as string,",
				"          COD_SUP_4 as integer,",
				"          NOME_COMP_4 as string,",
				"          COD_SUP_5 as integer,",
				"          NOME_COMP_5 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> CSVdimVendedor",
				"source(output(",
				"          COD_CIDADE as integer,",
				"          CIDADE as string,",
				"          ESTADO as string,",
				"          PAIS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> CSVenderecos",
				"source(output(",
				"          SK_VENDEDOR as integer,",
				"          COD_VENDEDOR as integer,",
				"          NOME_COMPLETO as string,",
				"          CARGO as string,",
				"          REGIAO_VENDA as string,",
				"          CIDADE_ATUACAO as string,",
				"          COD_SUP_1 as integer,",
				"          NOME_COMP_1 as string,",
				"          COD_SUP_2 as integer,",
				"          NOME_COMP_2 as string,",
				"          COD_SUP_3 as integer,",
				"          NOME_COMP_3 as string,",
				"          COD_SUP_4 as integer,",
				"          NOME_COMP_4 as string,",
				"          COD_SUP_5 as integer,",
				"          NOME_COMP_5 as string,",
				"          ATIVO as string,",
				"          DT_FIM as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT \\n    [SK_VENDEDOR]\\n    ,[COD_VENDEDOR]\\n    ,[NOME_COMPLETO]\\n    ,[CARGO]\\n    ,[REGIAO_VENDA]\\n    ,[CIDADE_ATUACAO]\\n    ,[COD_SUP_1]\\n    ,[NOME_COMP_1]\\n    ,[COD_SUP_2]\\n    ,[NOME_COMP_2]\\n    ,[COD_SUP_3]\\n    ,[NOME_COMP_3]\\n    ,[COD_SUP_4]\\n    ,[NOME_COMP_4]\\n    ,[COD_SUP_5]\\n    ,[NOME_COMP_5]\\n    ,[ATIVO]\\n    ,[DT_FIM]\\nFROM [comercial].[dimensao_vendedor]\\nWHERE\\n     [ATIVO] = \\'S\\'',",
				"     format: 'query') ~> DBdimVendedor",
				"DBdimVendedor, SelecionaColunas exists(DBdimVendedor@COD_VENDEDOR == SelecionaColunas@COD_VENDEDOR && (\r",
				"     DBdimVendedor@CARGO != SelecionaColunas@CARGO || \r",
				"     DBdimVendedor@REGIAO_VENDA != SelecionaColunas@REGIAO_VENDA || \r",
				"     DBdimVendedor@CIDADE_ATUACAO != SelecionaColunas@CIDADE_ATUACAO ||\r",
				"     DBdimVendedor@COD_SUP_1 != SelecionaColunas@COD_SUP_1 || \r",
				"     DBdimVendedor@COD_SUP_2 != SelecionaColunas@COD_SUP_2 || \r",
				"     DBdimVendedor@COD_SUP_3 != SelecionaColunas@COD_SUP_3 || \r",
				"     DBdimVendedor@COD_SUP_4 != SelecionaColunas@COD_SUP_4 || \r",
				"     DBdimVendedor@COD_SUP_5 != SelecionaColunas@COD_SUP_5\r",
				"),",
				"     negate:false,",
				"     broadcast: 'auto')~> DadosAlterados",
				"DadosAlterados derive(DT_FIM = addDays(currentDate('GMT-3'), -1),",
				"          ATIVO = 'N') ~> ColunaDtFim",
				"ColunaDtFim alterRow(updateIf(1==1)) ~> Condicao",
				"CSVdimVendedor, CSVenderecos join(CIDADE_ATUACAO == COD_CIDADE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinEnderecos",
				"SelecionaColunas, DBdimVendedor exists(DBdimVendedor@COD_VENDEDOR == SelecionaColunas@COD_VENDEDOR && (",
				"     DBdimVendedor@CARGO != SelecionaColunas@CARGO || ",
				"     DBdimVendedor@REGIAO_VENDA != SelecionaColunas@REGIAO_VENDA || ",
				"     DBdimVendedor@CIDADE_ATUACAO != SelecionaColunas@CIDADE_ATUACAO ||",
				"     DBdimVendedor@COD_SUP_1 != SelecionaColunas@COD_SUP_1 || ",
				"     DBdimVendedor@COD_SUP_2 != SelecionaColunas@COD_SUP_2 || ",
				"     DBdimVendedor@COD_SUP_3 != SelecionaColunas@COD_SUP_3 || ",
				"     DBdimVendedor@COD_SUP_4 != SelecionaColunas@COD_SUP_4 || ",
				"     DBdimVendedor@COD_SUP_5 != SelecionaColunas@COD_SUP_5",
				"),",
				"     negate:false,",
				"     broadcast: 'auto')~> DadosAtualizados",
				"LeftJoinEnderecos select(mapColumn(",
				"          COD_VENDEDOR,",
				"          NOME_COMPLETO,",
				"          CARGO,",
				"          REGIAO_VENDA,",
				"          CIDADE_ATUACAO = CIDADE,",
				"          COD_SUP_1,",
				"          NOME_COMP_1,",
				"          COD_SUP_2,",
				"          NOME_COMP_2,",
				"          COD_SUP_3,",
				"          NOME_COMP_3,",
				"          COD_SUP_4,",
				"          NOME_COMP_4,",
				"          COD_SUP_5,",
				"          NOME_COMP_5",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: true) ~> SelecionaColunas",
				"SelecionaColunas, DBdimVendedor exists(SelecionaColunas@COD_VENDEDOR == DBdimVendedor@COD_VENDEDOR,",
				"     negate:true,",
				"     broadcast: 'auto')~> DadosNovos",
				"DadosAtualizados sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SK_VENDEDOR as integer,",
				"          COD_VENDEDOR as integer,",
				"          NOME_COMPLETO as string,",
				"          CARGO as string,",
				"          REGIAO_VENDA as string,",
				"          CIDADE_ATUACAO as string,",
				"          COD_SUP_1 as integer,",
				"          NOME_COMP_1 as string,",
				"          COD_SUP_2 as integer,",
				"          NOME_COMP_2 as string,",
				"          COD_SUP_3 as integer,",
				"          NOME_COMP_3 as string,",
				"          COD_SUP_4 as integer,",
				"          NOME_COMP_4 as string,",
				"          COD_SUP_5 as integer,",
				"          NOME_COMP_5 as string,",
				"          ATIVO as string,",
				"          DT_INICIO as date,",
				"          DT_FIM as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          COD_VENDEDOR,",
				"          NOME_COMPLETO,",
				"          CARGO,",
				"          REGIAO_VENDA,",
				"          CIDADE_ATUACAO,",
				"          COD_SUP_1,",
				"          NOME_COMP_1,",
				"          COD_SUP_2,",
				"          NOME_COMP_2,",
				"          COD_SUP_3,",
				"          NOME_COMP_3,",
				"          COD_SUP_4,",
				"          NOME_COMP_4,",
				"          COD_SUP_5,",
				"          NOME_COMP_5",
				"     )) ~> InsereBD2",
				"Condicao sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SK_VENDEDOR as integer,",
				"          COD_VENDEDOR as integer,",
				"          NOME_COMPLETO as string,",
				"          CARGO as string,",
				"          REGIAO_VENDA as string,",
				"          CIDADE_ATUACAO as string,",
				"          COD_SUP_1 as integer,",
				"          NOME_COMP_1 as string,",
				"          COD_SUP_2 as integer,",
				"          NOME_COMP_2 as string,",
				"          COD_SUP_3 as integer,",
				"          NOME_COMP_3 as string,",
				"          COD_SUP_4 as integer,",
				"          NOME_COMP_4 as string,",
				"          COD_SUP_5 as integer,",
				"          NOME_COMP_5 as string,",
				"          ATIVO as string,",
				"          DT_INICIO as date,",
				"          DT_FIM as date",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['SK_VENDEDOR'],",
				"     format: 'table',",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 3,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SK_VENDEDOR,",
				"          ATIVO,",
				"          DT_FIM",
				"     )) ~> AlteraBD",
				"DadosNovos sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SK_VENDEDOR as integer,",
				"          COD_VENDEDOR as integer,",
				"          NOME_COMPLETO as string,",
				"          CARGO as string,",
				"          REGIAO_VENDA as string,",
				"          CIDADE_ATUACAO as string,",
				"          COD_SUP_1 as integer,",
				"          NOME_COMP_1 as string,",
				"          COD_SUP_2 as integer,",
				"          NOME_COMP_2 as string,",
				"          COD_SUP_3 as integer,",
				"          NOME_COMP_3 as string,",
				"          COD_SUP_4 as integer,",
				"          NOME_COMP_4 as string,",
				"          COD_SUP_5 as integer,",
				"          NOME_COMP_5 as string,",
				"          ATIVO as string,",
				"          DT_INICIO as date,",
				"          DT_FIM as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          COD_VENDEDOR,",
				"          NOME_COMPLETO,",
				"          CARGO,",
				"          REGIAO_VENDA,",
				"          CIDADE_ATUACAO,",
				"          COD_SUP_1,",
				"          NOME_COMP_1,",
				"          COD_SUP_2,",
				"          NOME_COMP_2,",
				"          COD_SUP_3,",
				"          NOME_COMP_3,",
				"          COD_SUP_4,",
				"          NOME_COMP_4,",
				"          COD_SUP_5,",
				"          NOME_COMP_5",
				"     )) ~> InsereBD1"
			]
		}
	}
}