{
	"name": "pl_clientes_latitude_longitude",
	"properties": {
		"activities": [
			{
				"name": "nome_arquivos_pasta",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_data_lake_excel_generico",
						"type": "DatasetReference",
						"parameters": {
							"nome_arquivo": "*",
							"nome_aba": "*",
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "para_cada_csv",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "filtro_arqs_csv",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('filtro_arqs_csv').output.Value\n\n",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "separa_latitude_longitude",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(item().name, 'Clientes X Latitude e Longitude') ",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "copiar_outros_csv",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 3,
											"retryIntervalInSeconds": 60,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_data_lake_csv_generico",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@variables('container')",
														"type": "Expression"
													},
													"nome_arquivo": {
														"value": "@item().name",
														"type": "Expression"
													},
													"separador": "*",
													"encoding": "*"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_data_lake_csv_generico",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().globalParameters.dl_arquivos_csv",
														"type": "Expression"
													},
													"nome_arquivo": {
														"value": "@item().name",
														"type": "Expression"
													},
													"separador": {
														"value": "@pipeline().globalParameters.separador_padrao",
														"type": "Expression"
													},
													"encoding": {
														"value": "@pipeline().globalParameters.encoding_padrao",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "ano_mes",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "ano_mes_item",
											"value": {
												"value": "@substring(item().name, add(indexOf(item().name, '('), 1), sub(indexOf(item().name, ')'), add(indexOf(item().name, '('), 1)))\n\n",
												"type": "Expression"
											}
										}
									},
									{
										"name": "ano_mes_array",
										"type": "AppendVariable",
										"dependsOn": [
											{
												"activity": "ano_mes",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "ano_mes_array",
											"value": {
												"value": "@variables('ano_mes_item')",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "filtro_arqs_csv",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "nome_arquivos_pasta",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('nome_arquivos_pasta').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name, '.CSV')",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"container": {
				"type": "String",
				"defaultValue": "raw-files"
			},
			"ano_mes_item": {
				"type": "String"
			},
			"ano_mes_array": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Data Lake"
		},
		"annotations": []
	}
}